/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";

export function GiftBox(props) {
    const { nodes, materials } = useGLTF("./misc-item-1.glb");
    return (
        <group {...props} dispose={null}>
            <group >
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube086.geometry}
                    material={materials.Pink01}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube086_1.geometry}
                    material={materials.Pink02}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube086_2.geometry}
                    material={materials.Pink03}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube086_3.geometry}
                    material={materials.Yellow01}
                />
            </group>
        </group>
    );
}

export function BoxGear(props) {
    const { nodes, materials } = useGLTF("./misc-item-2.glb");
    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Upper_box001.geometry}
                material={materials["Material.003"]}
                rotation={[0, -1.08, 0]}
            />
        </group>
    );
}

export function Cell(props) {
    const { nodes, materials } = useGLTF("./misc-item-3.glb");
    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes["Sci-fi_Barel_Game001"].geometry}
                material={materials["Материал purple"]}
                position={[4.07, 0.16, -1.47]}
                rotation={[-Math.PI, 1.44, -Math.PI]}
            />
        </group>
    );
}

const glowRed = new THREE.MeshBasicMaterial({ color: new THREE.Color(7, 0, 0.5), toneMapped: false })
const glowBlue = new THREE.MeshBasicMaterial({ color: new THREE.Color(0, 0.5, 20), toneMapped: false })
const glowGreen = new THREE.MeshBasicMaterial({ color: new THREE.Color(0, 3, 1), toneMapped: false })


export function Logo(props) {
    const { nodes, materials } = useGLTF("./logo-model.glb");

    materials.SVGMat.color = new THREE.Color("darkgray")

    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Logo.geometry}
                material={glowBlue}
                rotation={[Math.PI / 2, 0, 0]}
                scale={40}
            />
        </group>
    );
}

useGLTF.preload("./logo-model.glb");
useGLTF.preload("./misc-item-3.glb");
useGLTF.preload("./misc-item-2.glb");
useGLTF.preload("./misc-item-1.glb");


export default { GiftBox, BoxGear, Cell }
