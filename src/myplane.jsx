/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { MeshReflectorMaterial, useGLTF } from "@react-three/drei";

export default function Myplane(props) {
    const { nodes, materials } = useGLTF("./testing_plane.glb");
    return (
        <group {...props} dispose={null}>
            {/* <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plane.geometry}
                scale={[11.5, 9.26, 11.14]}
            >
                <MeshReflectorMaterial
                    blur={[300, 100]}
                    resolution={2048}
                    mixBlur={1}
                    mixStrength={50}
                    roughness={1}
                    depthScale={1.2}
                    minDepthThreshold={0.4}
                    maxDepthThreshold={1.4}
                    color="#050505"
                    metalness={0.5}
                />
            </mesh> */}
            <mesh scale={[11.5, 9.26, 11.14]}
                castShadow
                receiveShadow
                rotation-x={11}
            >
                <planeGeometry />
                <MeshReflectorMaterial
                    blur={[1000, 1000]}
                    resolution={2048}
                    mixBlur={1}
                    mixStrength={50}
                    roughness={1}
                    depthScale={1.2}
                    minDepthThreshold={0.4}
                    maxDepthThreshold={1.4}
                    color="#050505"
                    metalness={0.5}
                />
            </mesh>

        </group>

    );
}

useGLTF.preload("./testing_plane.glb");
