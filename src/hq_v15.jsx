/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useMemo, useRef } from "react";
import { useGLTF, PerspectiveCamera } from "@react-three/drei";
import * as THREE from "three";
import { useControls } from "leva";

export default function HQ15(props) {
    const { nodes, materials } = useGLTF("./hq-room-simple-remeshed15.glb");

    materials["main-metal-reflective"].roughness = 0.5
    materials["main-metal-reflective"].metalness = 0.8
    materials["main-metal-reflective"].reflectivness = 0

    materials["main-metal-reflective"].color = useMemo(() => {
        return new THREE.Color(0x1E2F45);
    }, [])


    const glowRed = new THREE.MeshBasicMaterial({ color: new THREE.Color(7, 0, 0.5), toneMapped: false })
    const glowBlue = new THREE.MeshBasicMaterial({ color: new THREE.Color(0, 0.5, 20), toneMapped: false })
    const glowBlueLight = new THREE.MeshBasicMaterial({ color: new THREE.Color(0, 0.5, 10), toneMapped: false })
    const glowGreen = new THREE.MeshBasicMaterial({ color: new THREE.Color(0, 3, 1), toneMapped: false })


    materials.white_ambient_light = glowBlueLight

    return (
        <group {...props} dispose={null}>
            {/* <PerspectiveCamera
                makeDefault={false}
                far={1000}
                near={0.1}
                fov={20.41}
                position={[-26.69, 2.93, 36.64]}
                rotation={[-0.01, -0.63, 0]}
            /> */}
            {/* <spotLight
                intensity={1.06}
                angle={0.85}
                penumbra={0.15}
                decay={2}
                color="#ff0009"
                position={[0, 17.16, 0]}
                rotation={[-Math.PI / 2, 0, 0]}
            /> */}
            <group position={[0.42, -0.09, -7.02]}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Mesh072.geometry}
                    material={nodes.Mesh072.material}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Mesh072_1.geometry}
                    material={materials["main-metal-reflective"]}
                />
            </group>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes["light-plane"].geometry}
                material={materials.top_light}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Mesh054.geometry}
                material={materials["main-metal-reflective"]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Mesh054_1.geometry}
                material={materials.white_ambient_light}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.table_base.geometry}
                material={materials["main-metal-reflective"]}
                position={[0.42, -0.09, -7.02]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.table001.geometry}
                material={materials["display Table"]}
                position={[0.42, -0.09, -7.02]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.outer_plate.geometry}
                material={materials["main-metal-reflective"]}
                rotation={[Math.PI / 2, 0, 0]}
                scale={0.01}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Mesh055.geometry}
                material={materials["main-metal-reflective"]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Mesh055_1.geometry}
                material={materials.white_ambient_light}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes["center-lamp"].geometry}
                material={materials["main-metal-reflective"]}
                position={[0, 8.95, -3.51]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes["outer-structure"].geometry}
                material={materials["main-metal-reflective"]}
            />
            <group rotation={[0, -1.26, 0]}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Mesh004.geometry}
                    material={materials["main-metal-reflective"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Mesh004_1.geometry}
                    material={materials.white_ambient_light}
                />
            </group>
            <group rotation={[0, -1.26, 0]}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Mesh007.geometry}
                    material={materials["main-metal-reflective"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Mesh007_1.geometry}
                    material={materials.white_ambient_light}
                />
            </group>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes["outer-structure-over-vents"].geometry}
                material={materials["main-metal-reflective"]}
                rotation={[0, -1.26, 0]}
            />
            <group rotation={[0, -1.31, 0]}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Mesh082.geometry}
                    material={materials["main-metal-reflective"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Mesh082_1.geometry}
                    material={materials.white_ambient_light}
                />
            </group>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes["outer-structure-lamps"].geometry}
                material={materials["main-metal-reflective"]}
                rotation={[0, -1.26, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Logo.geometry}
                material={materials.SVGMat}
                position={[0, 6.04, 0]}
                rotation={[Math.PI / 2, 0, 0]}
                scale={3.36}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes["outer-structure-pipes"].geometry}
                material={materials["main-metal-reflective"]}
                rotation={[0, -1.26, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Mesh036.geometry}
                material={materials["main-metal-reflective"]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Mesh036_1.geometry}
                material={materials.white_ambient_light}
            />
        </group>
    );
}

useGLTF.preload("./hq-room-simple-remeshed15.glb");
